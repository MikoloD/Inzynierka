// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inzynierka.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Model.City", b =>
                {
                    b.Property<int>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NodeId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Database.Model.Road", b =>
                {
                    b.Property<int>("EdgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("SourceNodeId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int?>("TargetNodeId")
                        .HasColumnType("int");

                    b.Property<float>("Wage")
                        .HasColumnType("real");

                    b.HasKey("EdgeId");

                    b.HasIndex("SourceNodeId");

                    b.HasIndex("TargetNodeId");

                    b.ToTable("Roads");
                });

            modelBuilder.Entity("Database.Model.Road", b =>
                {
                    b.HasOne("Database.Model.City", "SourceNode")
                        .WithMany("SourceRoads")
                        .HasForeignKey("SourceNodeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Database.Model.City", "TargetNode")
                        .WithMany("TargetRoads")
                        .HasForeignKey("TargetNodeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SourceNode");

                    b.Navigation("TargetNode");
                });

            modelBuilder.Entity("Database.Model.City", b =>
                {
                    b.Navigation("SourceRoads");

                    b.Navigation("TargetRoads");
                });
#pragma warning restore 612, 618
        }
    }
}
